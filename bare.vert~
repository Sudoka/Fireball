
varying vec2 vUv;


varying float noise;
 

void main(){
//     vUv = uv;
/*
    // get a turbulent 3d noise using the normal, normal to high freq	
    noise = 10.0 *  -.10 * turbulence( .5 * gl_Normal.xyz );
    // get a 3d noise using the position, low frequency
    float b = 5.0 * pnoise( 0.05 * gl_Vertex.xyz, vec3( 100.0 ) );
    // compose both noises
    float displacement = - 10. * noise + b;
     
    // move the position along the normal and transform it
    vec3 newPosition = gl_Vertex.xyz + gl_Normal.xyz * displacement;
    gl_Position = gl_ProjectionMatrix * gl_ModelViewMatrix * vec4(newPosition,1.0);
*/
    vec4 newVertex = gl_Vertex-vec4(3,0,0,1);
    gl_Position = gl_ProjectionMatrix * gl_ModelViewMatrix * newVertex;

}